---

- name: Create elasticsearch group
  group:
    name: "{{ elasticsearch_group }}"
    state: present

- name: Create elasticsearch user
  user:
    name: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    createhome: yes
    state: present

- name: Check if Elasticsearch is installed
  stat:
    path: "{{ elasticsearch_install_dir }}/elasticsearch"
    follow: yes
  register: elasticsearch_is_installed

- name: Download Elasticsearch archive
  become: yes
  get_url:
    url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    dest: "/tmp/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    group: "{{ elasticsearch_group }}"
    owner: "{{ elasticsearch_user }}"
  when: elasticsearch_is_installed.stat.exists == False

- name: Unarchive Elasticsearch
  become: yes
  command: "tar xzvf elasticsearch-{{ elasticsearch_version }}.tar.gz"
  args:
    chdir: /tmp
    creates: "/tmp/elasticsearch-{{ elasticsearch_version }}"
  when: elasticsearch_is_installed.stat.exists == False

- name: Move to install path
  become: yes
  command: "mv elasticsearch-{{ elasticsearch_version }} {{ elasticsearch_install_dir }}elasticsearch-{{ elasticsearch_version }}"
  args:
    chdir: /tmp
    creates: "{{ elasticsearch_install_dir }}elasticsearch-{{ elasticsearch_version }}"
  when: elasticsearch_is_installed.stat.exists == False

- name: Set folder permissions
  file:
    path: "{{ elasticsearch_install_dir }}elasticsearch-{{ elasticsearch_version }}"
    state: directory
    group: "{{ elasticsearch_group }}"
    owner: "{{ elasticsearch_user }}"
    recurse: yes

- name: Create symbolic link
  file:
    src: "{{ elasticsearch_install_dir }}elasticsearch-{{ elasticsearch_version }}"
    dest: "{{ elasticsearch_install_dir }}elasticsearch"
    state: link
  when: elasticsearch_is_installed.stat.exists == False

- name: Create default file
  template:
    src: ../templates/elasticsearch.environment
    dest: /etc/default/elasticsearch

- name: Create init script
  become: yes
  template:
    src: ../templates/init.Debian
    dest: /etc/init.d/elasticsearch
    mode: 0755

- name: Create service file
  become: yes
  template:
    src: ../templates/elasticsearch.service
    dest: /lib/systemd/system/elasticsearch.service
    mode: 0750

- name: Create log directory
  become: yes
  file:
    path: "{{ elasticsearch_log_dir }}"
    state: directory
    group: "{{ elasticsearch_group }}"
    owner: "{{ elasticsearch_user }}"

- name: Create data directory
  become: yes
  file:
    path: "{{ elasticsearch_data_dir }}"
    state: directory
    group: "{{ elasticsearch_group }}"
    owner: "{{ elasticsearch_user }}"

- name: Create run directory
  become: yes
  file:
    path: /var/run/elasticsearch
    state: directory
    group: "{{ elasticsearch_group }}"
    owner: "{{ elasticsearch_user }}"

- name: Update systemd
  become: yes
  systemd:
    name: elasticsearch
    daemon_reload: yes

- name: swap - disable swap
  command: swapoff --all
  ignore_errors: yes
  become: yes

- name: swap - remove current swaps from fstab
  lineinfile:
    dest: /etc/fstab
    regexp: '^/[\S]+\s+none\s+swap '
    state: absent
  become: yes

- name: Configure Xms JVM parameter
  lineinfile:
    dest: "{{ elasticsearch_install_dir }}elasticsearch/config/jvm.options"
    regexp: '^-Xms\d+g'
    line: "-Xms{{ elasticsearch_jvm_xms }}g"
    state: present

- name: Configure Xmx JVM parameter
  lineinfile:
    dest: "{{ elasticsearch_install_dir }}elasticsearch/config/jvm.options"
    regexp: '^-Xmx\d+g'
    line: "-Xmx{{ elasticsearch_jvm_xmx }}g"
    state: present

- name: modify nofile parameter
  pam_limits:
    domain: "{{ elasticsearch_user }}"
    limit_type: "-"
    limit_item: nofile
    value: 100000
    use_max: yes

- name: modify nproc parameter
  pam_limits:
    domain: "{{ elasticsearch_user }}"
    limit_type: "-"
    limit_item: nproc
    value: 100000
    use_max: yes

- name: modify memlock parameter
  pam_limits:
    domain: "{{ elasticsearch_user }}"
    limit_type: hard
    limit_item: memlock
    value: unlimited

- name: modify vm.max_map_count
  sysctl:
    name: vm.max_map_count
    state: present
    value: 262144

